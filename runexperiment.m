% Clusters = {{1st Cluster Class Num,
%              Mod 1 Position, Mod 1 Cov matrix,
%              Mod 2 Position, Mod 2 Cov matrix,
%              Num of samples (optional)},...
%             {2nd Cluster Class Num,
%              Mod 1 Position, Mod 1 Cov matrix,
%              Mod 2 Position, Mod 2 Cov matrix,
%              Num of samples (optional)},...
%             {3rd Cluster...etc...}         };
Clusters = {{1, [0.25 0.5],[0.005 0;0 0.0005], [0.50 0.75],[0.0005 0;0 0.0005]},...
            {2, [0.50 0.5],[0.005 0;0 0.0005], [0.25 0.25],[0.0005 0;0 0.0005]},...
            {3, [0.75 0.5],[0.005 0;0 0.0005], [0.75 0.25],[0.0005 0;0 0.0005]}};
Data = gensimcrossmoddata(300,...        % Num of samples...
                          Clusters,...    % Cross-modal cluster spec...
                          'noise', [1 1]); % Add noise?

% run ./data/loadirisdata;
% run ./data/loadionospheredata;
% run ./data/loadpimadata;
% run ./data/loadwinedata;
% run ./data/loadsoybeandata;
% run ./data/loadwbcdata;
% run  ../../../data/loadaffordancedata;
% loadwinequalityred;
% Data = castasregression(Data);

% 'save', './results/results.mat',...

Experiment = KFoldCVEvaluator('data', Data,...                            
                            'trials', 10,...
                            'epochs', 1,...
                            'test_interval_timesteps', Inf,...    
                            'debug', 0,...
                            'k', 10,...
                            'replicate_data', false,...
                            'replicate_init_conditions', true,...
                            'randomize_training_data', 'samplewise',... % samplewise (default), classwise, none
                            'save', 'results/sample_results');
                        
% Experiment = Experiment.addLearner('name', 'SVM',...
%                                    'type', 'svm');

% Constants...
CODEBOOK_INIT_METHOD_IN_SOFT = 'class_sample'; % rand, rand_sample, class_sample, dist_mean
CODEBOOK_INIT_METHOD_OUT_SOFT = 'class_sample'; % rand, rand_sample, class_sample, dist_mean
CODEBOOK_INIT_METHOD_IN_HARD = 'rand'; % rand, rand_sample, class_sample, dist_mean
CODEBOOK_INIT_METHOD_OUT_HARD = 'rand'; % rand, rand_sample, class_sample, dist_mean
PHASE_SHIFTS_IN = {0.5};
PHASE_SHIFTS_OUT = {NaN};
ALPHA_INIT_MOD1_PHASE1 = 0.2;
ALPHA_INIT_MOD1_PHASE2 = 0.2;
ALPHA_INIT_MOD2_PHASE1 = 0.2;
RADIUS_INIT_MOD1_PHASE1 = 3;
RADIUS_INIT_MOD1_PHASE2 = 1;
RADIUS_INIT_MOD2_PHASE1 = 3;
ALPHA_FEATURE_INIT_MOD1 = 0.1;


% %--------------------------------------------------------------------------
% % SELF-SUPERVISED SOM <=> SOM, SOFT INITIALIZATION
% %--------------------------------------------------------------------------                              
%                                
% Experiment = Experiment.addLearner('name', 'SOM <=> SOM with PC, Soft Init',...
%                                    'type', 'bimodal',...
%                                    'normalization', 'all',...
%                                    'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
%                                    'modality_types', {'codebook', 'codebook'},...
%                                    'mapping_type', 'hebbian',...
%                                    'auxdist_type', 'hellinger',...
%                                    'codebook_sizes', {[7 7], [7 7]},...
%                                    'codebook_neighs', {'gaussian', 'gaussian'},...
%                                    'codebook_lattices', {'hexa', 'hexa'},...
%                                    'codebook_init_method', {CODEBOOK_INIT_METHOD_IN_SOFT, CODEBOOK_INIT_METHOD_OUT_SOFT},... % rand, rand_sample, class_sample, dist_mean
%                                    'phase_shifts', {{NaN}, PHASE_SHIFTS_OUT},...
%                                    'updaters', {{'SOM'}, {'SOM'}},...
%                                    'alpha_types', {{'constant'}, {'constant'}},...
%                                    'alpha_inits', {{ALPHA_INIT_MOD1_PHASE1}, {ALPHA_INIT_MOD2_PHASE1}},...
%                                    'radius_types', {{'linear'}, {'linear'}},...
%                                    'radius_inits', {{RADIUS_INIT_MOD1_PHASE1}, {RADIUS_INIT_MOD2_PHASE1}},...
%                                    'radius_fins', {{1}, {1}},...
%                                    'window_sizes', {{NaN}, {NaN}},...
%                                    'alpha_feature_types', {{NaN}, {NaN}},...
%                                    'alpha_feature_inits', {{NaN}, {NaN}},...
%                                    'activation_types', {{'gaussian'}, {'gaussian'}},...
%                                    'feature_selection', 'fuzzy',...
%                                    'feature_selection_max', NaN,...
%                                    'feature_selection_feedback', false,...                                   
%                                    'metric', {'sumsquared', 'sumsquared'},...
%                                    'classification_method', 'node',...
%                                    'node_colouring_method', 'cluster_mean_node_cull',... % cluster_mean, cluster_max, cluster_mean_node_cull
%                                    'use_mex', false);                               
%                                
% Experiment = Experiment.addLearner('name', 'SOM <=> SOM with PC and FRC, Soft Init',...
%                                    'type', 'bimodal',...
%                                    'normalization', 'all',...
%                                    'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
%                                    'modality_types', {'codebook', 'codebook'},...
%                                    'mapping_type', 'hebbian',...
%                                    'auxdist_type', 'hellinger',...
%                                    'codebook_sizes', {[7 7], [7 7]},...
%                                    'codebook_neighs', {'gaussian', 'gaussian'},...
%                                    'codebook_lattices', {'hexa', 'hexa'},...
%                                    'codebook_init_method', {CODEBOOK_INIT_METHOD_IN_SOFT, CODEBOOK_INIT_METHOD_OUT_SOFT},... % rand, rand_sample, class_sample, dist_mean
%                                    'phase_shifts', {{NaN}, PHASE_SHIFTS_OUT},...
%                                    'updaters', {{'SOM'}, {'SOM'}},...
%                                    'alpha_types', {{'constant'}, {'constant'}},...
%                                    'alpha_inits', {{ALPHA_INIT_MOD1_PHASE1}, {ALPHA_INIT_MOD2_PHASE1}},...
%                                    'radius_types', {{'linear'}, {'linear'}},...
%                                    'radius_inits', {{RADIUS_INIT_MOD1_PHASE1}, {RADIUS_INIT_MOD2_PHASE1}},...
%                                    'radius_fins', {{1}, {1}},...
%                                    'window_sizes', {{NaN}, {NaN}},...
%                                    'alpha_feature_types', {{NaN}, {NaN}},...
%                                    'alpha_feature_inits', {{NaN}, {NaN}},...
%                                    'activation_types', {{'gaussian'}, {'gaussian'}},...
%                                    'feature_selection', 'lda_fuzzy',...
%                                    'feature_selection_max', NaN,...
%                                    'feature_selection_feedback', false,...                                   
%                                    'metric', {'sumsquared', 'sumsquared'},...
%                                    'classification_method', 'node',...
%                                    'node_colouring_method', 'cluster_mean_node_cull',... % cluster_mean, cluster_max, cluster_mean_node_cull
%                                    'use_mex', false);                                                                                                                                                                                         
%                                
% 
% %--------------------------------------------------------------------------
% % SELF-SUPERVISED (SOM -> GLVQ) <=> SOM, SOFT INITIALIZATION
% %--------------------------------------------------------------------------
% 
% Experiment = Experiment.addLearner('name', '(SOM -> GLVQ) <=> SOM with PC, Soft Init',...
%                                    'type', 'bimodal',...
%                                    'normalization', 'all',...
%                                    'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
%                                    'modality_types', {'codebook', 'codebook'},...
%                                    'mapping_type', 'hebbian',...
%                                    'auxdist_type', 'hellinger',...
%                                    'codebook_sizes', {[7 7], [7 7]},...
%                                    'codebook_neighs', {'gaussian', 'gaussian'},...
%                                    'codebook_lattices', {'hexa', 'hexa'},...
%                                    'codebook_init_method', {CODEBOOK_INIT_METHOD_IN_SOFT, CODEBOOK_INIT_METHOD_OUT_SOFT},... % rand, rand_sample, class_sample, dist_mean
%                                    'phase_shifts', {PHASE_SHIFTS_IN, PHASE_SHIFTS_OUT},...
%                                    'updaters', {{'SOM', 'HeurGLVQ'}, {'SOM'}},...
%                                    'alpha_types', {{'linear', 'constant'}, {'linear'}},...
%                                    'alpha_inits', {{ALPHA_INIT_MOD1_PHASE1, ALPHA_INIT_MOD1_PHASE2}, {ALPHA_INIT_MOD2_PHASE1}},...
%                                    'radius_types', {{'linear', 'linear'}, {'linear'}},...
%                                    'radius_inits', {{RADIUS_INIT_MOD1_PHASE1, RADIUS_INIT_MOD1_PHASE2}, {RADIUS_INIT_MOD2_PHASE1}},...
%                                    'radius_fins', {{1, 1}, {1}},...
%                                    'window_sizes', {{NaN, 0.1}, {NaN}},...
%                                    'alpha_feature_types', {{NaN, 'constant'}, {NaN}},...
%                                    'alpha_feature_inits', {{NaN, 0.1}, {NaN}},...
%                                    'activation_types', {{'gaussian', 'gaussian'}, {'gaussian'}},...
%                                    'feature_selection', 'fuzzy',...
%                                    'feature_selection_max', NaN,...
%                                    'feature_selection_feedback', true,...                                   
%                                    'metric', {'sumsquared', 'sumsquared'},...
%                                    'classification_method', 'node',...
%                                    'node_colouring_method', 'cluster_mean_node_cull',... % cluster_mean, cluster_max, cluster_mean_node_cull
%                                    'use_mex', false);                               
%                                
% Experiment = Experiment.addLearner('name', '(SOM -> GLVQ) <=> SOM with PC and FRC, Soft Init',...
%                                    'type', 'bimodal',...
%                                    'normalization', 'all',...
%                                    'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
%                                    'modality_types', {'codebook', 'codebook'},...
%                                    'mapping_type', 'hebbian',...
%                                    'auxdist_type', 'hellinger',...
%                                    'codebook_sizes', {[7 7], [7 7]},...
%                                    'codebook_neighs', {'gaussian', 'gaussian'},...
%                                    'codebook_lattices', {'hexa', 'hexa'},...
%                                    'codebook_init_method', {CODEBOOK_INIT_METHOD_IN_SOFT, CODEBOOK_INIT_METHOD_OUT_SOFT},... % rand, rand_sample, class_sample, dist_mean
%                                    'phase_shifts', {PHASE_SHIFTS_IN, PHASE_SHIFTS_OUT},...
%                                    'updaters', {{'SOM', 'HeurGLVQ'}, {'SOM'}},...
%                                    'alpha_types', {{'linear', 'constant'}, {'linear'}},...
%                                    'alpha_inits', {{ALPHA_INIT_MOD1_PHASE1, ALPHA_INIT_MOD1_PHASE2}, {ALPHA_INIT_MOD2_PHASE1}},...
%                                    'radius_types', {{'linear', 'linear'}, {'linear'}},...
%                                    'radius_inits', {{RADIUS_INIT_MOD1_PHASE1, RADIUS_INIT_MOD1_PHASE2}, {RADIUS_INIT_MOD2_PHASE1}},...
%                                    'radius_fins', {{1, 1}, {1}},...
%                                    'window_sizes', {{NaN, 0.1}, {NaN}},...
%                                    'alpha_feature_types', {{NaN, 'constant'}, {NaN}},...
%                                    'alpha_feature_inits', {{NaN, 0.1}, {NaN}},...
%                                    'activation_types', {{'gaussian', 'gaussian'}, {'gaussian'}},...
%                                    'feature_selection', 'lda_fuzzy',...
%                                    'feature_selection_max', NaN,...
%                                    'feature_selection_feedback', true,...                                   
%                                    'metric', {'sumsquared', 'sumsquared'},...
%                                    'classification_method', 'node',...
%                                    'node_colouring_method', 'cluster_mean_node_cull',... % cluster_mean, cluster_max, cluster_mean_node_cull
%                                    'use_mex', false);
% 
% %--------------------------------------------------------------------------
% % FULLY-SUPERVISED GLVQ, SOFT INITIALIZATION
% %--------------------------------------------------------------------------
% 
% Experiment = Experiment.addLearner('name', 'GLVQ, Soft Init',...
%                                    'type', 'unilayer',...
%                                    'modality_types', {'codebook'},...
%                                    'codebook_sizes', {[7 7]},...
%                                    'codebook_neighs', {'gaussian'},...
%                                    'codebook_lattices', {'hexa'},...
%                                    'codebook_init_method', {CODEBOOK_INIT_METHOD_IN_SOFT},...
%                                    'phase_shifts', {{NaN}},...
%                                    'updaters', {{'GLVQ'}},...
%                                    'alpha_types', {{'constant'}},...
%                                    'alpha_inits', {{ALPHA_INIT_MOD1_PHASE2}},...
%                                    'radius_types', {{'linear'}},...
%                                    'radius_inits', {{RADIUS_INIT_MOD1_PHASE1}},...
%                                    'radius_fins', {{1}},...
%                                    'window_sizes', {{NaN}},...
%                                    'alpha_feature_types', {{'constant'}},...
%                                    'alpha_feature_inits', {{ALPHA_FEATURE_INIT_MOD1}},...
%                                    'feature_selection', 'fuzzy',...
%                                    'feature_selection_feedback', true,...
%                                    'metric', {'sumsquared'},...
%                                    'classification_method', 'node',...
%                                    'node_colouring_method', 'none');
%                                
% %--------------------------------------------------------------------------
% % FULLY-SUPERVISED GRLVQ, SOFT INITIALIZATION
% %--------------------------------------------------------------------------
% 
% Experiment = Experiment.addLearner('name', 'GRLVQ, Soft Init',...
%                                    'type', 'unilayer',...
%                                    'modality_types', {'codebook'},...
%                                    'codebook_sizes', {[7 7]},...
%                                    'codebook_neighs', {'gaussian'},...
%                                    'codebook_lattices', {'hexa'},...
%                                    'codebook_init_method', {CODEBOOK_INIT_METHOD_IN_SOFT},...
%                                    'phase_shifts', {{NaN}},...
%                                    'updaters', {{'GRLVQ'}},...
%                                    'alpha_types', {{'constant'}},...
%                                    'alpha_inits', {{ALPHA_INIT_MOD1_PHASE2}},...
%                                    'radius_types', {{'linear'}},...
%                                    'radius_inits', {{RADIUS_INIT_MOD1_PHASE1}},...
%                                    'radius_fins', {{1}},...
%                                    'window_sizes', {{NaN}},...
%                                    'alpha_feature_types', {{'constant'}},...
%                                    'alpha_feature_inits', {{ALPHA_FEATURE_INIT_MOD1}},...
%                                    'feature_selection', 'fuzzy',...
%                                    'feature_selection_feedback', true,...
%                                    'metric', {'sumsquared'},...
%                                    'classification_method', 'node',...
%                                    'node_colouring_method', 'none');
%                                
% %--------------------------------------------------------------------------
% % FULLY-SUPERVISED SRNG, SOFT INITIALIZATION
% %--------------------------------------------------------------------------
% 
% Experiment = Experiment.addLearner('name', 'SRNG, Soft Init',...
%                                    'type', 'unilayer',...
%                                    'modality_types', {'codebook'},...
%                                    'codebook_sizes', {[7 7]},...
%                                    'codebook_neighs', {'gaussian'},...
%                                    'codebook_lattices', {'hexa'},...
%                                    'codebook_init_method', {CODEBOOK_INIT_METHOD_IN_SOFT},...
%                                    'phase_shifts', {{NaN}},...
%                                    'updaters', {{'SRNG'}},...
%                                    'alpha_types', {{'constant'}},...
%                                    'alpha_inits', {{ALPHA_INIT_MOD1_PHASE2}},...
%                                    'radius_types', {{'linear'}},...
%                                    'radius_inits', {{RADIUS_INIT_MOD1_PHASE1}},...
%                                    'radius_fins', {{1}},...
%                                    'window_sizes', {{NaN}},...
%                                    'alpha_feature_types', {{'constant'}},...
%                                    'alpha_feature_inits', {{ALPHA_FEATURE_INIT_MOD1}},...
%                                    'feature_selection', 'fuzzy',...
%                                    'feature_selection_feedback', true,...
%                                    'metric', {'sumsquared'},...
%                                    'classification_method', 'node',...
%                                    'node_colouring_method', 'none');

%--------------------------------------------------------------------------
% SELF-SUPERVISED SOM <=> SOM, HARD INITITALIZATION
%--------------------------------------------------------------------------                              
                               
Experiment = Experiment.addLearner('name', 'SOM <=> SOM with PC, Hard Init',...
                                   'type', 'bimodal',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook', 'codebook'},...
                                   'mapping_type', 'hebbian',...
                                   'auxdist_type', 'hellinger',...
                                   'codebook_sizes', {[7 7], [7 7]},...
                                   'codebook_neighs', {'gaussian', 'gaussian'},...
                                   'codebook_lattices', {'hexa', 'hexa'},...
                                   'codebook_init_method', {CODEBOOK_INIT_METHOD_IN_HARD, CODEBOOK_INIT_METHOD_OUT_HARD},... % rand, rand_sample, class_sample, dist_mean
                                   'phase_shifts', {{NaN}, PHASE_SHIFTS_OUT},...
                                   'updaters', {{'SOM'}, {'SOM'}},...
                                   'alpha_types', {{'constant'}, {'constant'}},...
                                   'alpha_inits', {{ALPHA_INIT_MOD1_PHASE1}, {ALPHA_INIT_MOD2_PHASE1}},...
                                   'radius_types', {{'linear'}, {'linear'}},...
                                   'radius_inits', {{RADIUS_INIT_MOD1_PHASE1}, {RADIUS_INIT_MOD2_PHASE1}},...
                                   'radius_fins', {{1}, {1}},...
                                   'window_sizes', {{NaN}, {NaN}},...
                                   'alpha_feature_types', {{NaN}, {NaN}},...
                                   'alpha_feature_inits', {{NaN}, {NaN}},...
                                   'activation_types', {{'gaussian'}, {'gaussian'}},...
                                   'feature_selection', 'fuzzy',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', false,...                                   
                                   'metric', {'sumsquared', 'sumsquared'},...
                                   'classification_method', 'node',...
                                   'node_colouring_method', 'cluster_mean_node_cull',... % cluster_mean, cluster_max, cluster_mean_node_cull
                                   'use_mex', false);                               
                               
Experiment = Experiment.addLearner('name', 'SOM <=> SOM with PC and FRC, Hard Init',...
                                   'type', 'bimodal',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook', 'codebook'},...
                                   'mapping_type', 'hebbian',...
                                   'auxdist_type', 'hellinger',...
                                   'codebook_sizes', {[7 7], [7 7]},...
                                   'codebook_neighs', {'gaussian', 'gaussian'},...
                                   'codebook_lattices', {'hexa', 'hexa'},...
                                   'codebook_init_method', {CODEBOOK_INIT_METHOD_IN_HARD, CODEBOOK_INIT_METHOD_OUT_HARD},... % rand, rand_sample, class_sample, dist_mean
                                   'phase_shifts', {{NaN}, PHASE_SHIFTS_OUT},...
                                   'updaters', {{'SOM'}, {'SOM'}},...
                                   'alpha_types', {{'constant'}, {'constant'}},...
                                   'alpha_inits', {{ALPHA_INIT_MOD1_PHASE1}, {ALPHA_INIT_MOD2_PHASE1}},...
                                   'radius_types', {{'linear'}, {'linear'}},...
                                   'radius_inits', {{RADIUS_INIT_MOD1_PHASE1}, {RADIUS_INIT_MOD2_PHASE1}},...
                                   'radius_fins', {{1}, {1}},...
                                   'window_sizes', {{NaN}, {NaN}},...
                                   'alpha_feature_types', {{NaN}, {NaN}},...
                                   'alpha_feature_inits', {{NaN}, {NaN}},...
                                   'activation_types', {{'gaussian'}, {'gaussian'}},...
                                   'feature_selection', 'lda_fuzzy',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', false,...                                   
                                   'metric', {'sumsquared', 'sumsquared'},...
                                   'classification_method', 'node',...
                                   'node_colouring_method', 'cluster_mean_node_cull',... % cluster_mean, cluster_max, cluster_mean_node_cull
                                   'use_mex', false);                                                                                                                                                                                         
                               

%--------------------------------------------------------------------------
% SELF-SUPERVISED (SOM -> GLVQ) <=> SOM, HARD INITITALIZATION
%--------------------------------------------------------------------------

Experiment = Experiment.addLearner('name', '(SOM -> GLVQ) <=> SOM with PC, Hard Init',...
                                   'type', 'bimodal',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook', 'codebook'},...
                                   'mapping_type', 'hebbian',...
                                   'auxdist_type', 'hellinger',...
                                   'codebook_sizes', {[7 7], [7 7]},...
                                   'codebook_neighs', {'gaussian', 'gaussian'},...
                                   'codebook_lattices', {'hexa', 'hexa'},...
                                   'codebook_init_method', {CODEBOOK_INIT_METHOD_IN_HARD, CODEBOOK_INIT_METHOD_OUT_HARD},... % rand, rand_sample, class_sample, dist_mean
                                   'phase_shifts', {PHASE_SHIFTS_IN, PHASE_SHIFTS_OUT},...
                                   'updaters', {{'SOM', 'HeurGLVQ'}, {'SOM'}},...
                                   'alpha_types', {{'linear', 'constant'}, {'linear'}},...
                                   'alpha_inits', {{ALPHA_INIT_MOD1_PHASE1, ALPHA_INIT_MOD1_PHASE2}, {ALPHA_INIT_MOD2_PHASE1}},...
                                   'radius_types', {{'linear', 'linear'}, {'linear'}},...
                                   'radius_inits', {{RADIUS_INIT_MOD1_PHASE1, RADIUS_INIT_MOD1_PHASE2}, {RADIUS_INIT_MOD2_PHASE1}},...
                                   'radius_fins', {{1, 1}, {1}},...
                                   'window_sizes', {{NaN, 0.1}, {NaN}},...
                                   'alpha_feature_types', {{NaN, 'constant'}, {NaN}},...
                                   'alpha_feature_inits', {{NaN, 0.1}, {NaN}},...
                                   'activation_types', {{'gaussian', 'gaussian'}, {'gaussian'}},...
                                   'feature_selection', 'fuzzy',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', true,...                                   
                                   'metric', {'sumsquared', 'sumsquared'},...
                                   'classification_method', 'node',...
                                   'node_colouring_method', 'cluster_mean_node_cull',... % cluster_mean, cluster_max, cluster_mean_node_cull
                                   'use_mex', false);                               
                               
Experiment = Experiment.addLearner('name', '(SOM -> GLVQ) <=> SOM with PC and FRC, Hard Init',...
                                   'type', 'bimodal',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook', 'codebook'},...
                                   'mapping_type', 'hebbian',...
                                   'auxdist_type', 'hellinger',...
                                   'codebook_sizes', {[7 7], [7 7]},...
                                   'codebook_neighs', {'gaussian', 'gaussian'},...
                                   'codebook_lattices', {'hexa', 'hexa'},...
                                   'codebook_init_method', {CODEBOOK_INIT_METHOD_IN_HARD, CODEBOOK_INIT_METHOD_OUT_HARD},... % rand, rand_sample, class_sample, dist_mean
                                   'phase_shifts', {PHASE_SHIFTS_IN, PHASE_SHIFTS_OUT},...
                                   'updaters', {{'SOM', 'HeurGLVQ'}, {'SOM'}},...
                                   'alpha_types', {{'linear', 'constant'}, {'linear'}},...
                                   'alpha_inits', {{ALPHA_INIT_MOD1_PHASE1, ALPHA_INIT_MOD1_PHASE2}, {ALPHA_INIT_MOD2_PHASE1}},...
                                   'radius_types', {{'linear', 'linear'}, {'linear'}},...
                                   'radius_inits', {{RADIUS_INIT_MOD1_PHASE1, RADIUS_INIT_MOD1_PHASE2}, {RADIUS_INIT_MOD2_PHASE1}},...
                                   'radius_fins', {{1, 1}, {1}},...
                                   'window_sizes', {{NaN, 0.1}, {NaN}},...
                                   'alpha_feature_types', {{NaN, 'constant'}, {NaN}},...
                                   'alpha_feature_inits', {{NaN, 0.1}, {NaN}},...
                                   'activation_types', {{'gaussian', 'gaussian'}, {'gaussian'}},...
                                   'feature_selection', 'lda_fuzzy',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', true,...                                   
                                   'metric', {'sumsquared', 'sumsquared'},...
                                   'classification_method', 'node',...
                                   'node_colouring_method', 'cluster_mean_node_cull',... % cluster_mean, cluster_max, cluster_mean_node_cull
                                   'use_mex', false);

%--------------------------------------------------------------------------
% FULLY-SUPERVISED GLVQ, HARD INITITALIZATION
%--------------------------------------------------------------------------

Experiment = Experiment.addLearner('name', 'GLVQ, Hard Init',...
                                   'type', 'unilayer',...
                                   'modality_types', {'codebook'},...
                                   'codebook_sizes', {[7 7]},...
                                   'codebook_neighs', {'gaussian'},...
                                   'codebook_lattices', {'hexa'},...
                                   'codebook_init_method', {CODEBOOK_INIT_METHOD_IN_HARD},...
                                   'phase_shifts', {{NaN}},...
                                   'updaters', {{'GLVQ'}},...
                                   'alpha_types', {{'constant'}},...
                                   'alpha_inits', {{ALPHA_INIT_MOD1_PHASE2}},...
                                   'radius_types', {{'linear'}},...
                                   'radius_inits', {{RADIUS_INIT_MOD1_PHASE1}},...
                                   'radius_fins', {{1}},...
                                   'window_sizes', {{NaN}},...
                                   'alpha_feature_types', {{'constant'}},...
                                   'alpha_feature_inits', {{ALPHA_FEATURE_INIT_MOD1}},...
                                   'feature_selection', 'fuzzy',...
                                   'feature_selection_feedback', true,...
                                   'metric', {'sumsquared'},...
                                   'classification_method', 'node',...
                                   'node_colouring_method', 'none');
                               
%--------------------------------------------------------------------------
% FULLY-SUPERVISED GRLVQ, HARD INITITALIZATION
%--------------------------------------------------------------------------

Experiment = Experiment.addLearner('name', 'GRLVQ, Hard Init',...
                                   'type', 'unilayer',...
                                   'modality_types', {'codebook'},...
                                   'codebook_sizes', {[7 7]},...
                                   'codebook_neighs', {'gaussian'},...
                                   'codebook_lattices', {'hexa'},...
                                   'codebook_init_method', {CODEBOOK_INIT_METHOD_IN_HARD},...
                                   'phase_shifts', {{NaN}},...
                                   'updaters', {{'GRLVQ'}},...
                                   'alpha_types', {{'constant'}},...
                                   'alpha_inits', {{ALPHA_INIT_MOD1_PHASE2}},...
                                   'radius_types', {{'linear'}},...
                                   'radius_inits', {{RADIUS_INIT_MOD1_PHASE1}},...
                                   'radius_fins', {{1}},...
                                   'window_sizes', {{NaN}},...
                                   'alpha_feature_types', {{'constant'}},...
                                   'alpha_feature_inits', {{ALPHA_FEATURE_INIT_MOD1}},...
                                   'feature_selection', 'fuzzy',...
                                   'feature_selection_feedback', true,...
                                   'metric', {'sumsquared'},...
                                   'classification_method', 'node',...
                                   'node_colouring_method', 'none');
                               
%--------------------------------------------------------------------------
% FULLY-SUPERVISED SRNG, HARD INITITALIZATION
%--------------------------------------------------------------------------

Experiment = Experiment.addLearner('name', 'SRNG, Hard Init',...
                                   'type', 'unilayer',...
                                   'modality_types', {'codebook'},...
                                   'codebook_sizes', {[7 7]},...
                                   'codebook_neighs', {'gaussian'},...
                                   'codebook_lattices', {'hexa'},...
                                   'codebook_init_method', {CODEBOOK_INIT_METHOD_IN_HARD},...
                                   'phase_shifts', {{NaN}},...
                                   'updaters', {{'SRNG'}},...
                                   'alpha_types', {{'constant'}},...
                                   'alpha_inits', {{ALPHA_INIT_MOD1_PHASE2}},...
                                   'radius_types', {{'linear'}},...
                                   'radius_inits', {{RADIUS_INIT_MOD1_PHASE1}},...
                                   'radius_fins', {{1}},...
                                   'window_sizes', {{NaN}},...
                                   'alpha_feature_types', {{'constant'}},...
                                   'alpha_feature_inits', {{ALPHA_FEATURE_INIT_MOD1}},...
                                   'feature_selection', 'fuzzy',...
                                   'feature_selection_feedback', true,...
                                   'metric', {'sumsquared'},...
                                   'classification_method', 'node',...
                                   'node_colouring_method', 'none');                               
                                           
Experiment = Experiment.run();
