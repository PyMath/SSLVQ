% Data = loadsim1data('noise', true);
% loadaffordancedata;
loadirisdata;
% loadionospheredata;
% loadwinedata;
% loadwinequalityred;
% loadpimadata;
% Data = castasregression(Data);

% 'save', './results/results.mat',...

% Normalize...
% Data.FeatureVectors = normalize(Data.FeatureVectors,3);

% Debug depth level.
% 0 = Don't save anything except results.
% 1 = Save the learner states at the final evaluation timestep
%     without internal learner states.
% 2 = Save the learner states at each interval evaluation timestep
%     without internal learner states.
% 3 = Save the learner states at the final evaluation timestep
%     with internal learner states.
% 4 = Save the learner states at each interval evaluation timestep
%     with internal learner states.

% Codebook initialization options
% {'rand', 'random'}:
%    Random initial codebook vector values.
% {'sample', 'rand_sample'}:
%    Random samples from the training data.
% 'dist_sample':
%    Each class in the training data is clustered,
%    then codebook vectors for each class are sampled from
%    the clusters.
% 'dist_mean':
%    Each class in the training data is clustered,
%    then codebook vectors for each class are assigned to the
%    mean values of the clusters.

Experiment = KFoldCVEvaluator('data', Data,...                            
                              'trials', 1,...
                              'epochs', 1,...
                              'test_interval_epochs', Inf,...
                              'k', 10,...
                              'save', '../results/all_iris_dist_mean_1_trials_1_epochs.mat',...
                              'debug', 0,...
                              'replicate_initial_conditions', true);
                          
Experiment = Experiment.addLearner('name', 'LVQ1',...
                                   'type', 'unilayer',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook'},...
                                   'codebook_sizes', {[6 1]},...
                                   'codebook_neighs', {NaN},...
                                   'codebook_lattices', {'hexa'},...
                                   'codebook_init_method', {'dist_mean'},... % rand, sample, dist_sample, dist_mean
                                   'phase_shifts', {{NaN}},...
                                   'updaters', {{'LVQ1'}},...
                                   'alpha_types', {{'constant'}},...
                                   'alpha_inits', {{0.3}},...
                                   'radius_types', {{NaN}},...
                                   'radius_inits', {{NaN}},...
                                   'radius_fins', {{NaN}},...
                                   'window_sizes', {{NaN}},...
                                   'alpha_feature_types', {{NaN}},...
                                   'alpha_feature_inits', {{NaN}},...
                                   'feature_selection', 'fuzzy',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', true,...
                                   'feature_selection_feedback_max', NaN,...
                                   'metric', {'sumsquared'},...
                                   'classification_method', 'node');
                          
Experiment = Experiment.addLearner('name', 'RLVQ1',...
                                   'type', 'unilayer',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook'},...
                                   'codebook_sizes', {[6 1]},...
                                   'codebook_neighs', {NaN},...
                                   'codebook_lattices', {'hexa'},...
                                   'codebook_init_method', {'dist_mean'},... % rand, sample, dist_sample, dist_mean
                                   'phase_shifts', {{NaN}},...
                                   'updaters', {{'RLVQ1'}},...
                                   'alpha_types', {{'constant'}},...
                                   'alpha_inits', {{0.3}},...
                                   'radius_types', {{NaN}},...
                                   'radius_inits', {{NaN}},...
                                   'radius_fins', {{NaN}},...
                                   'window_sizes', {{NaN}},...
                                   'alpha_feature_types', {{'constant'}},...
                                   'alpha_feature_inits', {{0.1}},...
                                   'feature_selection', 'fuzzy',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', true,...
                                   'feature_selection_feedback_max', NaN,...
                                   'metric', {'sumsquared'},...
                                   'classification_method', 'node');
                               
Experiment = Experiment.addLearner('name', 'LDALVQ1',...
                                   'type', 'unilayer',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook'},...
                                   'codebook_sizes', {[6 1]},...
                                   'codebook_neighs', {NaN},...
                                   'codebook_lattices', {'hexa'},...
                                   'codebook_init_method', {'dist_mean'},... % rand, sample, dist_sample, dist_mean
                                   'phase_shifts', {{NaN}},...
                                   'updaters', {{'LDALVQ1'}},...
                                   'alpha_types', {{'constant'}},...
                                   'alpha_inits', {{0.3}},...
                                   'radius_types', {{NaN}},...
                                   'radius_inits', {{NaN}},...
                                   'radius_fins', {{NaN}},...
                                   'window_sizes', {{NaN}},...
                                   'alpha_feature_types', {{NaN}},...
                                   'alpha_feature_inits', {{NaN}},...
                                   'feature_selection', 'fuzzy',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', true,...
                                   'feature_selection_feedback_max', NaN,...
                                   'metric', {'sumsquared'},...
                                   'classification_method', 'node');
                               
Experiment = Experiment.addLearner('name', 'LDALVQ1_3',...
                                   'type', 'unilayer',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook'},...
                                   'codebook_sizes', {[6 1]},...
                                   'codebook_neighs', {NaN},...
                                   'codebook_lattices', {'hexa'},...
                                   'codebook_init_method', {'dist_mean'},... % rand, sample, dist_sample, dist_mean
                                   'phase_shifts', {{NaN}},...
                                   'updaters', {{'LDALVQ1_3'}},...
                                   'alpha_types', {{'constant'}},...
                                   'alpha_inits', {{0.3}},...
                                   'radius_types', {{NaN}},...
                                   'radius_inits', {{NaN}},...
                                   'radius_fins', {{NaN}},...
                                   'window_sizes', {{NaN}},...
                                   'alpha_feature_types', {{NaN}},...
                                   'alpha_feature_inits', {{NaN}},...
                                   'feature_selection', 'fuzzy',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', true,...
                                   'feature_selection_feedback_max', NaN,...
                                   'metric', {'sumsquared'},...
                                   'classification_method', 'node');
                               
Experiment = Experiment.addLearner('name', 'LDALVQ1, No Feedback',...
                                   'type', 'unilayer',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook'},...
                                   'codebook_sizes', {[6 1]},...
                                   'codebook_neighs', {NaN},...
                                   'codebook_lattices', {'hexa'},...
                                   'codebook_init_method', {'dist_mean'},... % rand, sample, dist_sample, dist_mean
                                   'phase_shifts', {{NaN}},...
                                   'updaters', {{'LDALVQ1'}},...
                                   'alpha_types', {{'constant'}},...
                                   'alpha_inits', {{0.3}},...
                                   'radius_types', {{NaN}},...
                                   'radius_inits', {{NaN}},...
                                   'radius_fins', {{NaN}},...
                                   'window_sizes', {{NaN}},...
                                   'alpha_feature_types', {{NaN}},...
                                   'alpha_feature_inits', {{NaN}},...
                                   'feature_selection', 'fuzzy',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', false,...
                                   'feature_selection_feedback_max', NaN,...
                                   'metric', {'sumsquared'},...
                                   'classification_method', 'node');
                               
Experiment = Experiment.addLearner('name', 'LDALVQ1_3, No Feedback',...
                                   'type', 'unilayer',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook'},...
                                   'codebook_sizes', {[6 1]},...
                                   'codebook_neighs', {NaN},...
                                   'codebook_lattices', {'hexa'},...
                                   'codebook_init_method', {'dist_mean'},... % rand, sample, dist_sample, dist_mean
                                   'phase_shifts', {{NaN}},...
                                   'updaters', {{'LDALVQ1_3'}},...
                                   'alpha_types', {{'constant'}},...
                                   'alpha_inits', {{0.3}},...
                                   'radius_types', {{NaN}},...
                                   'radius_inits', {{NaN}},...
                                   'radius_fins', {{NaN}},...
                                   'window_sizes', {{NaN}},...
                                   'alpha_feature_types', {{NaN}},...
                                   'alpha_feature_inits', {{NaN}},...
                                   'feature_selection', 'fuzzy',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', false,...
                                   'feature_selection_feedback_max', NaN,...
                                   'metric', {'sumsquared'},...
                                   'classification_method', 'node');
                               
Experiment = Experiment.addLearner('name', 'GLVQ',...
                                   'type', 'unilayer',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook'},...
                                   'codebook_sizes', {[6 1]},...
                                   'codebook_neighs', {NaN},...
                                   'codebook_lattices', {'hexa'},...
                                   'codebook_init_method', {'dist_mean'},... % rand, sample, dist_sample, dist_mean
                                   'phase_shifts', {{NaN}},...
                                   'updaters', {{'GLVQ'}},...
                                   'alpha_types', {{'constant'}},...
                                   'alpha_inits', {{0.3}},...
                                   'radius_types', {{NaN}},...
                                   'radius_inits', {{NaN}},...
                                   'radius_fins', {{NaN}},...
                                   'window_sizes', {{NaN}},...
                                   'alpha_feature_types', {{NaN}},...
                                   'alpha_feature_inits', {{NaN}},...
                                   'feature_selection', 'fuzzy',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', true,...
                                   'feature_selection_feedback_max', NaN,...
                                   'metric', {'sumsquared'},...
                                   'classification_method', 'node');
                          
Experiment = Experiment.addLearner('name', 'GRLVQ',...
                                   'type', 'unilayer',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook'},...
                                   'codebook_sizes', {[6 1]},...
                                   'codebook_neighs', {NaN},...
                                   'codebook_lattices', {'hexa'},...
                                   'codebook_init_method', {'dist_mean'},... % rand, sample, dist_sample, dist_mean
                                   'phase_shifts', {{NaN}},...
                                   'updaters', {{'GRLVQ'}},...
                                   'alpha_types', {{'constant'}},...
                                   'alpha_inits', {{0.3}},...
                                   'radius_types', {{NaN}},...
                                   'radius_inits', {{NaN}},...
                                   'radius_fins', {{NaN}},...
                                   'window_sizes', {{NaN}},...
                                   'alpha_feature_types', {{'constant'}},...
                                   'alpha_feature_inits', {{0.1}},...
                                   'feature_selection', 'fuzzy',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', true,...
                                   'feature_selection_feedback_max', NaN,...
                                   'metric', {'sumsquared'},...
                                   'classification_method', 'node');

Experiment = Experiment.addLearner('name', 'LDAGLVQ',...
                                   'type', 'unilayer',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook'},...
                                   'codebook_sizes', {[6 1]},...
                                   'codebook_neighs', {NaN},...
                                   'codebook_lattices', {'hexa'},...
                                   'codebook_init_method', {'dist_mean'},... % rand, sample, dist_sample, dist_mean
                                   'phase_shifts', {{NaN}},...
                                   'updaters', {{'LDAGLVQ'}},...
                                   'alpha_types', {{'constant'}},...
                                   'alpha_inits', {{0.3}},...
                                   'radius_types', {{NaN}},...
                                   'radius_inits', {{NaN}},...
                                   'radius_fins', {{NaN}},...
                                   'window_sizes', {{NaN}},...
                                   'alpha_feature_types', {{NaN}},...
                                   'alpha_feature_inits', {{NaN}},...
                                   'feature_selection', 'fuzzy',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', true,...
                                   'feature_selection_feedback_max', NaN,...
                                   'metric', {'sumsquared'},...
                                   'classification_method', 'node');
                               
Experiment = Experiment.addLearner('name', 'LDAGLVQ_3',...
                                   'type', 'unilayer',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook'},...
                                   'codebook_sizes', {[6 1]},...
                                   'codebook_neighs', {NaN},...
                                   'codebook_lattices', {'hexa'},...
                                   'codebook_init_method', {'dist_mean'},... % rand, sample, dist_sample, dist_mean
                                   'phase_shifts', {{NaN}},...
                                   'updaters', {{'LDAGLVQ_3'}},...
                                   'alpha_types', {{'constant'}},...
                                   'alpha_inits', {{0.3}},...
                                   'radius_types', {{NaN}},...
                                   'radius_inits', {{NaN}},...
                                   'radius_fins', {{NaN}},...
                                   'window_sizes', {{NaN}},...
                                   'alpha_feature_types', {{NaN}},...
                                   'alpha_feature_inits', {{NaN}},...
                                   'feature_selection', 'fuzzy',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', true,...
                                   'feature_selection_feedback_max', NaN,...
                                   'metric', {'sumsquared'},...
                                   'classification_method', 'node');
                               
Experiment = Experiment.addLearner('name', 'LDAGLVQ, No Feedback',...
                                   'type', 'unilayer',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook'},...
                                   'codebook_sizes', {[6 1]},...
                                   'codebook_neighs', {NaN},...
                                   'codebook_lattices', {'hexa'},...
                                   'codebook_init_method', {'dist_mean'},... % rand, sample, dist_sample, dist_mean
                                   'phase_shifts', {{NaN}},...
                                   'updaters', {{'LDAGLVQ'}},...
                                   'alpha_types', {{'constant'}},...
                                   'alpha_inits', {{0.3}},...
                                   'radius_types', {{NaN}},...
                                   'radius_inits', {{NaN}},...
                                   'radius_fins', {{NaN}},...
                                   'window_sizes', {{NaN}},...
                                   'alpha_feature_types', {{NaN}},...
                                   'alpha_feature_inits', {{NaN}},...
                                   'feature_selection', 'fuzzy',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', true,...
                                   'feature_selection_feedback_max', NaN,...
                                   'metric', {'sumsquared'},...
                                   'classification_method', 'node');
                               
Experiment = Experiment.addLearner('name', 'LDAGLVQ_3, No Feedback',...
                                   'type', 'unilayer',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook'},...
                                   'codebook_sizes', {[6 1]},...
                                   'codebook_neighs', {NaN},...
                                   'codebook_lattices', {'hexa'},...
                                   'codebook_init_method', {'dist_mean'},... % rand, sample, dist_sample, dist_mean
                                   'phase_shifts', {{NaN}},...
                                   'updaters', {{'LDAGLVQ_3'}},...
                                   'alpha_types', {{'constant'}},...
                                   'alpha_inits', {{0.3}},...
                                   'radius_types', {{NaN}},...
                                   'radius_inits', {{NaN}},...
                                   'radius_fins', {{NaN}},...
                                   'window_sizes', {{NaN}},...
                                   'alpha_feature_types', {{NaN}},...
                                   'alpha_feature_inits', {{NaN}},...
                                   'feature_selection', 'fuzzy',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', true,...
                                   'feature_selection_feedback_max', NaN,...
                                   'metric', {'sumsquared'},...
                                   'classification_method', 'node');
                               
Experiment = Experiment.addLearner('name', 'Query-based LVQ1',...
                                   'type', 'unilayer',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook'},...
                                   'codebook_sizes', {[6 1]},...
                                   'codebook_neighs', {NaN},...
                                   'codebook_lattices', {'hexa'},...
                                   'codebook_init_method', {'dist_mean'},... % rand, sample, dist_sample, dist_mean
                                   'phase_shifts', {{NaN}},...
                                   'updaters', {{'LVQ1'}},...
                                   'alpha_types', {{'constant'}},...
                                   'alpha_inits', {{0.3}},...
                                   'radius_types', {{NaN}},...
                                   'radius_inits', {{NaN}},...
                                   'radius_fins', {{NaN}},...
                                   'window_sizes', {{NaN}},...
                                   'alpha_feature_types', {{NaN}},...
                                   'alpha_feature_inits', {{NaN}},...
                                   'feature_selection', 'query',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', true,...
                                   'feature_selection_feedback_max', NaN,...
                                   'metric', {'sumsquared'},...
                                   'classification_method', 'node');
                               
Experiment = Experiment.addLearner('name', 'Query-based GLVQ',...
                                   'type', 'unilayer',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook'},...
                                   'codebook_sizes', {[6 1]},...
                                   'codebook_neighs', {NaN},...
                                   'codebook_lattices', {'hexa'},...
                                   'codebook_init_method', {'dist_mean'},... % rand, sample, dist_sample, dist_mean
                                   'phase_shifts', {{NaN}},...
                                   'updaters', {{'GLVQ'}},...
                                   'alpha_types', {{'constant'}},...
                                   'alpha_inits', {{0.3}},...
                                   'radius_types', {{NaN}},...
                                   'radius_inits', {{NaN}},...
                                   'radius_fins', {{NaN}},...
                                   'window_sizes', {{NaN}},...
                                   'alpha_feature_types', {{NaN}},...
                                   'alpha_feature_inits', {{NaN}},...
                                   'feature_selection', 'query',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', true,...
                                   'feature_selection_feedback_max', NaN,...
                                   'metric', {'sumsquared'},...
                                   'classification_method', 'node');
                               
Experiment = Experiment.addLearner('name', 'Query-based GRLVQ',...
                                   'type', 'unilayer',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook'},...
                                   'codebook_sizes', {[6 1]},...
                                   'codebook_neighs', {NaN},...
                                   'codebook_lattices', {'hexa'},...
                                   'codebook_init_method', {'dist_mean'},... % rand, sample, dist_sample, dist_mean
                                   'phase_shifts', {{NaN}},...
                                   'updaters', {{'GRLVQ'}},...
                                   'alpha_types', {{'constant'}},...
                                   'alpha_inits', {{0.3}},...
                                   'radius_types', {{NaN}},...
                                   'radius_inits', {{NaN}},...
                                   'radius_fins', {{NaN}},...
                                   'window_sizes', {{NaN}},...
                                   'alpha_feature_types', {{'constant'}},...
                                   'alpha_feature_inits', {{0.1}},...
                                   'feature_selection', 'query',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', true,...
                                   'feature_selection_feedback_max', NaN,...
                                   'metric', {'sumsquared'},...
                                   'classification_method', 'node');
                               
Experiment = Experiment.addLearner('name', 'Query-based LDAGLVQ',...
                                   'type', 'unilayer',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook'},...
                                   'codebook_sizes', {[6 1]},...
                                   'codebook_neighs', {NaN},...
                                   'codebook_lattices', {'hexa'},...
                                   'codebook_init_method', {'dist_mean'},... % rand, sample, dist_sample, dist_mean
                                   'phase_shifts', {{NaN}},...
                                   'updaters', {{'LDAGLVQ'}},...
                                   'alpha_types', {{'constant'}},...
                                   'alpha_inits', {{0.3}},...
                                   'radius_types', {{NaN}},...
                                   'radius_inits', {{NaN}},...
                                   'radius_fins', {{NaN}},...
                                   'window_sizes', {{NaN}},...
                                   'alpha_feature_types', {{NaN}},...
                                   'alpha_feature_inits', {{NaN}},...
                                   'feature_selection', 'query',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', true,...
                                   'feature_selection_feedback_max', NaN,...
                                   'metric', {'sumsquared'},...
                                   'classification_method', 'node');
                               
Experiment = Experiment.addLearner('name', 'Query-based LDAGLVQ_3',...
                                   'type', 'unilayer',...
                                   'normalization', 'all',...
                                   'normalization_method', 'range',... % var, range, log, logistic, histD, histC, eval
                                   'modality_types', {'codebook'},...
                                   'codebook_sizes', {[6 1]},...
                                   'codebook_neighs', {NaN},...
                                   'codebook_lattices', {'hexa'},...
                                   'codebook_init_method', {'dist_mean'},... % rand, sample, dist_sample, dist_mean
                                   'phase_shifts', {{NaN}},...
                                   'updaters', {{'LDAGLVQ_3'}},...
                                   'alpha_types', {{'constant'}},...
                                   'alpha_inits', {{0.3}},...
                                   'radius_types', {{NaN}},...
                                   'radius_inits', {{NaN}},...
                                   'radius_fins', {{NaN}},...
                                   'window_sizes', {{NaN}},...
                                   'alpha_feature_types', {{NaN}},...
                                   'alpha_feature_inits', {{NaN}},...
                                   'feature_selection', 'query',...
                                   'feature_selection_max', NaN,...
                                   'feature_selection_feedback', true,...
                                   'feature_selection_feedback_max', NaN,...
                                   'metric', {'sumsquared'},...
                                   'classification_method', 'node');                               
                               
Experiment = Experiment.run();